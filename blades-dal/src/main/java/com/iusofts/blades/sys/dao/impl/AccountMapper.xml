<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iusofts.blades.sys.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.iusofts.blades.sys.model.Account" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="reg_time" property="regTime" jdbcType="VARCHAR" />
    <result column="activated" property="activated" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="VARCHAR" />
    <result column="locked" property="locked" jdbcType="VARCHAR" />
    <result column="nonexpired" property="nonexpired" jdbcType="VARCHAR" />
    <result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, salt, reg_time, activated, enabled, locked, nonexpired, reg_ip, 
    email, mobile
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iusofts.blades.sys.model.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit ${limitStart} , ${limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.iusofts.blades.sys.model.AccountExample" >
    delete from t_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iusofts.blades.sys.model.Account" >
    insert into t_account (id, username, password, 
      salt, reg_time, activated, 
      enabled, locked, nonexpired, 
      reg_ip, email, mobile
      )
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{regTime,jdbcType=VARCHAR}, #{activated,jdbcType=VARCHAR}, 
      #{enabled,jdbcType=VARCHAR}, #{locked,jdbcType=VARCHAR}, #{nonexpired,jdbcType=VARCHAR}, 
      #{regIp,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iusofts.blades.sys.model.Account" >
    insert into t_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="activated != null" >
        activated,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="nonexpired != null" >
        nonexpired,
      </if>
      <if test="regIp != null" >
        reg_ip,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=VARCHAR},
      </if>
      <if test="activated != null" >
        #{activated,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=VARCHAR},
      </if>
      <if test="nonexpired != null" >
        #{nonexpired,jdbcType=VARCHAR},
      </if>
      <if test="regIp != null" >
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iusofts.blades.sys.model.AccountExample" resultType="java.lang.Integer" >
    select count(*) from t_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null" >
        reg_time = #{record.regTime,jdbcType=VARCHAR},
      </if>
      <if test="record.activated != null" >
        activated = #{record.activated,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        enabled = #{record.enabled,jdbcType=VARCHAR},
      </if>
      <if test="record.locked != null" >
        locked = #{record.locked,jdbcType=VARCHAR},
      </if>
      <if test="record.nonexpired != null" >
        nonexpired = #{record.nonexpired,jdbcType=VARCHAR},
      </if>
      <if test="record.regIp != null" >
        reg_ip = #{record.regIp,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_account
    set id = #{record.id,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=VARCHAR},
      activated = #{record.activated,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=VARCHAR},
      locked = #{record.locked,jdbcType=VARCHAR},
      nonexpired = #{record.nonexpired,jdbcType=VARCHAR},
      reg_ip = #{record.regIp,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iusofts.blades.sys.model.Account" >
    update t_account
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=VARCHAR},
      </if>
      <if test="activated != null" >
        activated = #{activated,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=VARCHAR},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=VARCHAR},
      </if>
      <if test="nonexpired != null" >
        nonexpired = #{nonexpired,jdbcType=VARCHAR},
      </if>
      <if test="regIp != null" >
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iusofts.blades.sys.model.Account" >
    update t_account
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=VARCHAR},
      activated = #{activated,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=VARCHAR},
      nonexpired = #{nonexpired,jdbcType=VARCHAR},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 单条修改有效性 -->
  <update id="updateEnabledById" parameterType="java.lang.String">
    update t_account
    set ENABLED = #{enabled,jdbcType=VARCHAR}
    where ID = #{id}
  </update>

  <!-- 批量修改有效性 -->
  <update id="updateEnabledByIds" parameterType="java.util.List">
    update t_account t
    set t.ENABLED = #{enabled,jdbcType=VARCHAR}
    where t.ID in
    <foreach item="id" index="index" collection="ids" open="(" separator=","
             close=")">
      '${id}'
    </foreach>
  </update>

  <!-- 批量删除 -->
  <delete id="deleteByIds" parameterType="java.util.List">
    delete from t_account where id in
    <foreach item="id" index="index" collection="ids" open="(" separator=","
             close=")">
      '${id}'
    </foreach>
  </delete>

  <!-- 校验用户身份证号是否存在 -->
  <select id="isUserNameExist" resultType="java.lang.Integer">
    select count(*) from t_account
    t
    where t.USERNAME = #{userName}
  </select>
</mapper>